USE md;
CREATE TABLE IF NOT EXISTS refs (ref CHAR);
CREATE TABLE IF NOT EXISTS `cch_properties` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВладелецДополнительныхЗначений` CHAR, `ДополнительныеЗначенияИспользуются` BOOLEAN, `ДополнительныеЗначенияСВесом` BOOLEAN, `Заголовок` CHAR, `ЗаголовокФормыВыбораЗначения` CHAR, `ЗаголовокФормыЗначения` CHAR, `ЗаполнятьОбязательно` BOOLEAN, `Комментарий` CHAR, `МногострочноеПолеВвода` INT, `НаборСвойств` CHAR, `tooltip` CHAR, `УдалитьСклоненияПредмета` CHAR, `ФорматСвойства` CHAR, `ЭтоДополнительноеСведение` BOOLEAN, `type` JSON);
CREATE TABLE IF NOT EXISTS `enm_ЮрФизЛицо` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыХраненияФайлов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыФайловДляВстроенногоРедактора` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыТекстовЭлектронныхПисем` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыСравненияЗначенийСкидокНаценок` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПользователей` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыПодключаемогоОборудования` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОтчетов` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыОтветственныхЛиц` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыНалогообложенияНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКодовКарт` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКассККМ` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыКарт` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ТипыДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СтавкиНДС` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_СпособыУстановкиКурсаВалюты` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ПолФизическогоЛица` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ЕдиницыИзмеренияВремени` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ДниНедели` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ГрадацииКачества` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыЛицензийАлкогольнойПродукции` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДополнительныхОтчетовИОбработок` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВидыДнейПроизводственногоКалендаря` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВариантыОформленияПродажи` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `enm_ВариантыИспользованияХарактеристикНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, sequence INT, synonym CHAR);
CREATE TABLE IF NOT EXISTS `doc_СверкаВзаиморасчетов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `Контрагент` CHAR, `Партнер` CHAR, `Договор` CHAR, `НачалоПериода` Date, `КонецПериода` Date, `Статус` CHAR, `Менеджер` CHAR, `Комментарий` CHAR, `ДолжностьРуководителяКонтрагента` CHAR, `ФИОРуководителяКонтрагента` CHAR, `РасшифровкаПоЗаказам` BOOLEAN, `РасшифровкаПоПартнерам` BOOLEAN, `РасшифровкаПоДоговорам` BOOLEAN, `КонтактноеЛицо` CHAR, `Руководитель` CHAR, `ts_ДанныеКонтрагента` JSON);
CREATE TABLE IF NOT EXISTS `doc_РеализацияУслугПрочихАктивов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `ХозяйственнаяОперация` CHAR, `Организация` CHAR, `Подразделение` CHAR, `Менеджер` CHAR, `Партнер` CHAR, `Контрагент` CHAR, `Соглашение` CHAR, `Договор` CHAR, `ГруппаФинансовогоУчета` CHAR, `Валюта` CHAR, `ВалютаВзаиморасчетов` CHAR, `ЦенаВключаетНДС` BOOLEAN, `НалогообложениеНДС` CHAR, `СуммаДокумента` FLOAT, `СуммаВзаиморасчетов` FLOAT, `ДатаПлатежа` Date, `ФормаОплаты` CHAR, `БанковскийСчетОрганизации` CHAR, `БанковскийСчетКонтрагента` CHAR, `Грузоотправитель` CHAR, `Грузополучатель` CHAR, `БанковскийСчетГрузоотправителя` CHAR, `БанковскийСчетГрузополучателя` CHAR, `АдресДоставки` CHAR, `ДоверенностьНомер` CHAR, `ДоверенностьДата` Date, `ДоверенностьВыдана` CHAR, `ДоверенностьЛицо` CHAR, `Отпустил` CHAR, `ОтпустилДолжность` CHAR, `Основание` CHAR, `Комментарий` CHAR, `КонтактноеЛицо` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ПорядокРасчетов` CHAR, `ОснованиеДата` Date, `ОснованиеНомер` CHAR, `ИдентификаторПлатежа` CHAR, `ts_Доходы` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_РеализацияТоваровУслуг` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `УдалитьАвтомобиль` CHAR, `АдресДоставки` CHAR, `БанковскийСчетОрганизации` CHAR, `БанковскийСчетКонтрагента` CHAR, `БанковскийСчетГрузоотправителя` CHAR, `БанковскийСчетГрузополучателя` CHAR, `БанковскийСчетПеревозчика` CHAR, `Валюта` CHAR, `ВалютаВзаиморасчетов` CHAR, `УдалитьВодитель` CHAR, `Грузоотправитель` CHAR, `Грузополучатель` CHAR, `ДатаПлатежа` Date, `ДатаРаспоряжения` Date, `ДоверенностьВыдана` CHAR, `ДоверенностьДата` Date, `ДоверенностьЛицо` CHAR, `ДоверенностьНомер` CHAR, `ЗаказКлиента` CHAR, `Организация` CHAR, `Контрагент` CHAR, `Менеджер` CHAR, `НалогообложениеНДС` CHAR, `СуммаДокумента` FLOAT, `Партнер` CHAR, `Перевозчик` CHAR, `Подразделение` CHAR, `Сделка` CHAR, `СкидкиРассчитаны` BOOLEAN, `Склад` CHAR, `Согласован` BOOLEAN, `Соглашение` CHAR, `УдалитьСрокДоставки` Date, `СуммаВзаиморасчетов` FLOAT, `Комментарий` CHAR, `ФормаОплаты` CHAR, `ХозяйственнаяОперация` CHAR, `ЦенаВключаетНДС` BOOLEAN, `Касса` CHAR, `Отпустил` CHAR, `ОтпустилДолжность` CHAR, `РеализацияПоЗаказам` BOOLEAN, `ГруппаФинансовогоУчета` CHAR, `КартаЛояльности` CHAR, `Договор` CHAR, `Основание` CHAR, `Статус` CHAR, `Автор` CHAR, `СуммаПредоплаты` FLOAT, `СуммаПредоплатыЗаТару` FLOAT, `СпособДоставки` CHAR, `ЗонаДоставки` CHAR, `АдресДоставкиЗначенияПолей` CHAR, `ПеревозчикПартнер` CHAR, `ВремяДоставкиС` Date, `ВремяДоставкиПо` Date, `АдресДоставкиПеревозчика` CHAR, `АдресДоставкиПеревозчикаЗначенияПолей` CHAR, `ДополнительнаяИнформацияПоДоставке` CHAR, `КонтактноеЛицо` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ПорядокРасчетов` CHAR, `ВернутьМногооборотнуюТару` BOOLEAN, `ДатаВозвратаМногооборотнойТары` Date, `СостояниеЗаполненияМногооборотнойТары` CHAR, `ВидыЗапасовУказаныВручную` BOOLEAN, `ТребуетсяЗалогЗаТару` BOOLEAN, `ЕстьРасхождения` BOOLEAN, `ОснованиеДата` Date, `ОснованиеНомер` CHAR, `ДопоставкаПоРеализации` CHAR, `ДатаПереходаПраваСобственности` Date, `ВариантОформленияПродажи` CHAR, `ИдентификаторПлатежа` CHAR, `ts_Товары` JSON, `ts_СкидкиНаценки` JSON, `ts_ВидыЗапасов` JSON, `ts_extra_fields` JSON, `ts_РасшифровкаПлатежа` JSON, `ts_Серии` JSON, `ts_РасхожденияТовары` JSON, `ts_РасхожденияСерии` JSON);
CREATE TABLE IF NOT EXISTS `doc_РасходныйКассовыйОрдер` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `ОрганизацияПолучатель` CHAR, `Касса` CHAR, `СуммаДокумента` FLOAT, `ХозяйственнаяОперация` CHAR, `Выдать` CHAR, `Основание` CHAR, `Приложение` CHAR, `ПоДокументу` CHAR, `АвансовыйОтчет` CHAR, `КассаПолучатель` CHAR, `Контрагент` CHAR, `БанковскийСчет` CHAR, `ПодотчетноеЛицо` CHAR, `ЗаявкаНаРасходованиеДенежныхСредств` CHAR, `РаспоряжениеНаПеремещениеДенежныхСредств` CHAR, `НомерЧекаККМ` INT, `Валюта` CHAR, `Кассир` CHAR, `КассаККМ` CHAR, `Комментарий` CHAR, `НеКонтролироватьЗаполнениеЗаявки` BOOLEAN, `СтатьяДвиженияДенежныхСредств` CHAR, `ДокументОснование` CHAR, `ВалютаКонвертации` CHAR, `КурсКонвертации` FLOAT, `СуммаПослеКонвертации` FLOAT, `Ведомость` CHAR, `Подразделение` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `НомерВедомостиНаВыплатуЗарплаты` CHAR, `ДатаВедомостиНаВыплатуЗарплаты` Date, `УдалитьСтатьяРасходов` CHAR, `УдалитьАналитикаРасходов` CHAR, `УдалитьПериодВозникновенияРасхода` Date, `СтатьяАктивовПассивов` CHAR, `АналитикаАктивовПассивов` CHAR, `ОплатаПоЗаявкам` BOOLEAN, `ПроводкиПоРаботникам` BOOLEAN, `ts_РасшифровкаПлатежа` JSON, `ts_ВыплатаЗаработнойПлаты` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_ПриходныйКассовыйОрдер` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `Касса` CHAR, `СуммаДокумента` FLOAT, `ХозяйственнаяОперация` CHAR, `ПринятоОт` CHAR, `Основание` CHAR, `Приложение` CHAR, `Контрагент` CHAR, `ПодотчетноеЛицо` CHAR, `БанковскийСчет` CHAR, `РасходныйКассовыйОрдер` CHAR, `НомерЧекаККМ` INT, `Валюта` CHAR, `Кассир` CHAR, `СтатьяДвиженияДенежныхСредств` CHAR, `РаспоряжениеНаПеремещениеДенежныхСредств` CHAR, `ВТомЧислеНДС` CHAR, `ДокументОснование` CHAR, `КассаККМ` CHAR, `КассаОтправитель` CHAR, `Комментарий` CHAR, `УдалитьВыемкаДенежныхСредствИзКассыККМ` CHAR, `ВалютаКонвертации` CHAR, `КурсКонвертации` FLOAT, `ГлавныйБухгалтер` CHAR, `СтатьяАктивовПассивов` CHAR, `АналитикаАктивовПассивов` CHAR, `ДоверенностьВыданная` CHAR, `СуммаКонвертации` FLOAT, `ts_РасшифровкаПлатежа` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_ПоступлениеБезналичныхДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `БанковскийСчет` CHAR, `ТипПлатежногоДокумента` CHAR, `ХозяйственнаяОперация` CHAR, `СуммаДокумента` FLOAT, `Контрагент` CHAR, `БанковскийСчетКонтрагента` CHAR, `БанковскийСчетОтправитель` CHAR, `КассаОтправитель` CHAR, `ДатаВходящегоДокумента` Date, `НомерВходящегоДокумента` CHAR, `НазначениеПлатежа` CHAR, `Валюта` CHAR, `Комментарий` CHAR, `СтатьяДвиженияДенежныхСредств` CHAR, `СписаниеБезналичныхДенежныхСредств` CHAR, `ВалютаКонвертации` CHAR, `КурсКонвертации` FLOAT, `ПодотчетноеЛицо` CHAR, `Подразделение` CHAR, `СтатьяАктивовПассивов` CHAR, `АналитикаАктивовПассивов` CHAR, `ПроведеноБанком` BOOLEAN, `ДатаПроведенияБанком` Date, `ДокументОснование` CHAR, `ИдентификаторПлатежа` CHAR, `СуммаКонвертации` FLOAT, `ts_РасшифровкаПлатежа` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_ОперацияПоПлатежнойКарте` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `ХозяйственнаяОперация` CHAR, `Валюта` CHAR, `Контрагент` CHAR, `СуммаДокумента` FLOAT, `ЭквайринговыйТерминал` CHAR, `НомерПлатежнойКарты` CHAR, `ЗаявкаНаРасходованиеДенежныхСредств` CHAR, `ОплатаВыполнена` BOOLEAN, `КодАвторизации` CHAR, `Ответственный` CHAR, `Комментарий` CHAR, `НеКонтролироватьЗаполнениеЗаявки` BOOLEAN, `СтатьяДвиженияДенежныхСредств` CHAR, `НомерЧекаККМ` INT, `Удалить_ДоговорЭквайринга` CHAR, `Удалить_Касса` CHAR, `Удалить_ВидПлатежнойКарты` CHAR, `ts_РасшифровкаПлатежа` JSON);
CREATE TABLE IF NOT EXISTS `doc_КоммерческоеПредложениеКлиенту` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Партнер` CHAR, `Сделка` CHAR, `Валюта` CHAR, `СуммаДокумента` FLOAT, `ГрафикОплаты` CHAR, `ДокументОснование` CHAR, `СрокДействия` Date, `Менеджер` CHAR, `ДополнительнаяИнформация` CHAR, `Соглашение` CHAR, `СрокПоставки` INT, `ЦенаВключаетНДС` BOOLEAN, `Статус` CHAR, `Согласован` BOOLEAN, `Склад` CHAR, `Организация` CHAR, `КонтактноеЛицо` CHAR, `НалогообложениеНДС` CHAR, `ФормаОплаты` CHAR, `СкидкиРассчитаны` BOOLEAN, `Комментарий` CHAR, `ХозяйственнаяОперация` CHAR, `КартаЛояльности` CHAR, `СпособДоставки` CHAR, `Автор` CHAR, `ВернутьМногооборотнуюТару` BOOLEAN, `СрокВозвратаМногооборотнойТары` INT, `СостояниеЗаполненияМногооборотнойТары` CHAR, `ТребуетсяЗалогЗаТару` BOOLEAN, `ts_Товары` JSON, `ts_СкидкиНаценки` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_ЗаказПоставщику` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Партнер` CHAR, `Контрагент` CHAR, `Организация` CHAR, `Соглашение` CHAR, `Склад` CHAR, `Валюта` CHAR, `Менеджер` CHAR, `ЦенаВключаетНДС` BOOLEAN, `Статус` CHAR, `СуммаДокумента` FLOAT, `УдалитьПриоритет` CHAR, `ДополнительнаяИнформация` CHAR, `ЖелаемаяДатаПоступления` Date, `МаксимальныйКодСтроки` INT, `Согласован` BOOLEAN, `ФормаОплаты` CHAR, `Касса` CHAR, `БанковскийСчет` CHAR, `СуммаАвансаДоПодтверждения` FLOAT, `СуммаПредоплатыДоПоступления` FLOAT, `ДатаПервогоПоступления` Date, `ДатаСогласования` Date, `НалогообложениеНДС` CHAR, `ХозяйственнаяОперация` CHAR, `Комментарий` CHAR, `УдалитьТребуетсяДоверенность` BOOLEAN, `НомерПоДаннымПоставщика` CHAR, `ДатаПоДаннымПоставщика` Date, `Сделка` CHAR, `Подразделение` CHAR, `УдалитьЗакупкаПодДеятельностьОблагаемуюЕНВД` BOOLEAN, `ГруппаФинансовогоУчета` CHAR, `РегистрироватьЦеныПоставщика` BOOLEAN, `Договор` CHAR, `Автор` CHAR, `ДокументОснование` CHAR, `ПоступлениеОднойДатой` BOOLEAN, `ДатаПоступления` Date, `ПорядокРасчетов` CHAR, `АдресДоставки` CHAR, `КонтактноеЛицо` CHAR, `ВернутьМногооборотнуюТару` BOOLEAN, `СрокВозвратаМногооборотнойТары` INT, `СостояниеЗаполненияМногооборотнойТары` CHAR, `ЗакупкаПодДеятельность` CHAR, `ИспользуетсяОбособленноеОбеспечение` BOOLEAN, `ТребуетсяЗалогЗаТару` BOOLEAN, `СуммаВозвратнойТары` FLOAT, `priority` CHAR, `ts_Товары` JSON, `ts_ЭтапыГрафикаОплаты` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_ЗаказКлиента` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Партнер` CHAR, `Контрагент` CHAR, `Организация` CHAR, `Соглашение` CHAR, `Сделка` CHAR, `Валюта` CHAR, `СуммаДокумента` FLOAT, `ГрафикОплаты` CHAR, `ЖелаемаяДатаОтгрузки` Date, `Склад` CHAR, `ЦенаВключаетНДС` BOOLEAN, `Менеджер` CHAR, `ДополнительнаяИнформация` CHAR, `ДокументОснование` CHAR, `УдалитьПриоритет` CHAR, `НеОтгружатьЧастями` BOOLEAN, `Статус` CHAR, `МаксимальныйКодСтроки` INT, `ДатаСогласования` Date, `Согласован` BOOLEAN, `ФормаОплаты` CHAR, `БанковскийСчет` CHAR, `БанковскийСчетКонтрагента` CHAR, `Касса` CHAR, `СуммаАвансаДоОбеспечения` FLOAT, `СуммаПредоплатыДоОтгрузки` FLOAT, `ДатаОтгрузки` Date, `АдресДоставки` CHAR, `НалогообложениеНДС` CHAR, `СкидкиРассчитаны` BOOLEAN, `ХозяйственнаяОперация` CHAR, `Комментарий` CHAR, `НомерПоДаннымКлиента` CHAR, `ДатаПоДаннымКлиента` Date, `Грузоотправитель` CHAR, `Грузополучатель` CHAR, `БанковскийСчетГрузоотправителя` CHAR, `БанковскийСчетГрузополучателя` CHAR, `ГруппаФинансовогоУчета` CHAR, `КартаЛояльности` CHAR, `Договор` CHAR, `Подразделение` CHAR, `Автор` CHAR, `ПорядокРасчетов` CHAR, `Назначение` CHAR, `СпособДоставки` CHAR, `ПеревозчикПартнер` CHAR, `ЗонаДоставки` CHAR, `ВремяДоставкиС` Date, `ВремяДоставкиПо` Date, `АдресДоставкиПеревозчика` CHAR, `АдресДоставкиЗначенияПолей` CHAR, `АдресДоставкиПеревозчикаЗначенияПолей` CHAR, `ДополнительнаяИнформацияПоДоставке` CHAR, `КонтактноеЛицо` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ВернутьМногооборотнуюТару` BOOLEAN, `СрокВозвратаМногооборотнойТары` INT, `СостояниеЗаполненияМногооборотнойТары` CHAR, `СуммаВозвратнойТары` FLOAT, `НазначениеПлатежа` CHAR, `ТребуетсяЗалогЗаТару` BOOLEAN, `priority` CHAR, `ИдентификаторПлатежа` CHAR, `ts_Товары` JSON, `ts_ЭтапыГрафикаОплаты` JSON, `ts_СкидкиНаценки` JSON, `ts_extra_fields` JSON, `ts_Серии` JSON);
CREATE TABLE IF NOT EXISTS `doc_АктВыполненныхРабот` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `АктПоЗаказам` BOOLEAN, `БанковскийСчетКонтрагента` CHAR, `БанковскийСчетОрганизации` CHAR, `Валюта` CHAR, `ВалютаВзаиморасчетов` CHAR, `ДатаПлатежа` Date, `ДополнительнаяИнформация` CHAR, `ДополнительнаяИнформацияШапки` CHAR, `ЗаказКлиента` CHAR, `Касса` CHAR, `Комментарий` CHAR, `Контрагент` CHAR, `Менеджер` CHAR, `НалогообложениеНДС` CHAR, `Организация` CHAR, `Партнер` CHAR, `Подразделение` CHAR, `Сделка` CHAR, `СкидкиРассчитаны` BOOLEAN, `Согласован` BOOLEAN, `Соглашение` CHAR, `СуммаВзаиморасчетов` FLOAT, `СуммаДокумента` FLOAT, `ФормаОплаты` CHAR, `ЦенаВключаетНДС` BOOLEAN, `ГруппаФинансовогоУчета` CHAR, `КартаЛояльности` CHAR, `Договор` CHAR, `Автор` CHAR, `КонтактноеЛицо` CHAR, `Руководитель` CHAR, `ГлавныйБухгалтер` CHAR, `ПорядокРасчетов` CHAR, `ИдентификаторПлатежа` CHAR, `ts_Услуги` JSON, `ts_СкидкиНаценки` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `doc_РеализацияПодарочныхСертификатов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, posted BOOLEAN, date Date, number_doc CHAR, `Организация` CHAR, `Валюта` CHAR, `СуммаДокумента` FLOAT, `Кассир` CHAR, `Комментарий` CHAR, `КассаККМ` CHAR, `НомерЧекаККМ` INT, `ПолученоНаличными` FLOAT, `КассоваяСмена` CHAR, `Статус` CHAR, `ts_ПодарочныеСертификаты` JSON, `ts_ОплатаПлатежнымиКартами` JSON);
CREATE TABLE IF NOT EXISTS `ireg_$log` (`date` INT, `sequence` INT, `class` CHAR, `note` CHAR, `obj` CHAR, PRIMARY KEY (`date`, `sequence`));
CREATE TABLE IF NOT EXISTS `ireg_ШтрихкодыНоменклатуры` (`Штрихкод` CHAR, `Номенклатура` CHAR, `Характеристика` CHAR, `Упаковка` CHAR, PRIMARY KEY (`Штрихкод`));
CREATE TABLE IF NOT EXISTS `ireg_ЦеныНоменклатуры` (`Номенклатура` CHAR, `ВидЦены` CHAR, `Характеристика` CHAR, `Цена` FLOAT, `Упаковка` CHAR, `Валюта` CHAR, PRIMARY KEY (`Номенклатура`, `ВидЦены`, `Характеристика`));
CREATE TABLE IF NOT EXISTS `ireg_НоменклатураСегмента` (`Сегмент` CHAR, `Номенклатура` CHAR, `Характеристика` CHAR, PRIMARY KEY (`Сегмент`, `Номенклатура`, `Характеристика`));
CREATE TABLE IF NOT EXISTS `ireg_НоменклатураПродаваемаяСовместно` (`НоменклатураПредпосылка` CHAR, `ХарактеристикаПредпосылка` CHAR, `НоменклатураСледствие` CHAR, `ХарактеристикаСледствие` CHAR, `ВариантАнализа` CHAR, `ДобавленоАвтоматически` BOOLEAN, `ПроцентСлучаев` FLOAT, `КоличествоСлучаев` FLOAT, PRIMARY KEY (`НоменклатураПредпосылка`, `ХарактеристикаПредпосылка`, `НоменклатураСледствие`, `ХарактеристикаСледствие`, `ВариантАнализа`, `ДобавленоАвтоматически`));
CREATE TABLE IF NOT EXISTS `ireg_КорзинаПокупателя` (`ОбъектАвторизации` CHAR, `Номенклатура` CHAR, `Характеристика` CHAR, `Упаковка` CHAR, `НоменклатураНабора` CHAR, `ХарактеристикаНабора` CHAR, `КоличествоУпаковок` FLOAT, `Цена` FLOAT, PRIMARY KEY (`ОбъектАвторизации`, `Номенклатура`, `Характеристика`, `Упаковка`, `НоменклатураНабора`, `ХарактеристикаНабора`));
CREATE TABLE IF NOT EXISTS `cat_ТоварныеКатегории` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `owner` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_Марки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Производитель` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ЗоныДоставки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_property_values_hierarchy` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Вес` FLOAT, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ДоговорыКредитовИДепозитов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `БанковскийСчет` CHAR, `БанковскийСчетКомиссии` CHAR, `БанковскийСчетКонтрагента` CHAR, `БанковскийСчетПроцентов` CHAR, `ВалютаВзаиморасчетов` CHAR, `date` Date, `ДатаПервогоТранша` Date, `ДатаПоследнегоПлатежа` Date, `Касса` CHAR, `Комментарий` CHAR, `Контрагент` CHAR, `НаименованиеДляПечати` CHAR, `number_doc` CHAR, `Организация` CHAR, `Ответственный` CHAR, `Партнер` CHAR, `Подразделение` CHAR, `ПорядокОплаты` CHAR, `Согласован` BOOLEAN, `СрокДней` INT, `СрокМес` INT, `Статус` CHAR, `СтатьяДДСКомиссии` CHAR, `СтатьяДДСОсновногоДолга` CHAR, `СтатьяДДСПоступленияВыдачи` CHAR, `СтатьяДДСПроцентов` CHAR, `СтатьяДоходовРасходовКомиссии` CHAR, `СтатьяДоходовРасходовПроцентов` CHAR, `СуммаКомиссии` FLOAT, `СуммаЛимита` FLOAT, `СуммаПроцентов` FLOAT, `СуммаТраншей` FLOAT, `ТипДоговора` CHAR, `ТипКомиссии` CHAR, `ТипСрочности` CHAR, `ФормаОплаты` CHAR, `ХарактерДоговора` CHAR, `ГруппаФинансовогоУчетаДенежныхСредств` CHAR, `ГруппаФинансовогоУчета` CHAR, `ts_Обеспечение` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ШаблоныЭтикетокИЦенников` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Шаблон` CHAR, `Назначение` CHAR, `Ширина` INT, `Высота` INT, `РазмерЯчейки` INT, `ДляЧего` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ЦеновыеГруппы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ХарактеристикиНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `Принципал` CHAR, `Контрагент` CHAR, `owner` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ФизическиеЛица` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаРождения` Date, `Пол` CHAR, `ИНН` CHAR, `ГруппаДоступа` CHAR, `Уточнение` CHAR, `parent` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_Файлы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автор` CHAR, `ВладелецФайла` CHAR, `ДатаЗаема` Date, `ДатаСоздания` Date, `Зашифрован` BOOLEAN, `ИндексКартинки` INT, `Описание` CHAR, `ПодписанЭП` BOOLEAN, `ПолноеНаименование` CHAR, `Редактирует` CHAR, `ТекстХранилище` CHAR, `ТекущаяВерсия` CHAR, `ТекущаяВерсияАвтор` CHAR, `ТекущаяВерсияДатаМодификацииФайла` Date, `ТекущаяВерсияДатаСоздания` Date, `ТекущаяВерсияКод` CHAR, `ТекущаяВерсияНомерВерсии` INT, `ТекущаяВерсияПутьКФайлу` CHAR, `ТекущаяВерсияРазмер` INT, `ТекущаяВерсияРасширение` CHAR, `ТекущаяВерсияТом` CHAR, `ХранитьВерсии` BOOLEAN, `ts_extra_fields` JSON, `ts_СертификатыШифрования` JSON);
CREATE TABLE IF NOT EXISTS `cat_УчетныеЗаписиЭлектроннойПочты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `АдресЭлектроннойПочты` CHAR, `ИмяПользователя` CHAR, `СерверВходящейПочты` CHAR, `СерверИсходящейПочты` CHAR, `ИспользоватьБезопасныйВходНаСерверВходящейПочты` BOOLEAN, `ИспользоватьБезопасныйВходНаСерверИсходящейПочты` BOOLEAN, `ПортСервераВходящейПочты` INT, `ПортСервераИсходящейПочты` INT, `ИспользоватьЗащищенноеСоединениеДляВходящейПочты` BOOLEAN, `ИспользоватьЗащищенноеСоединениеДляИсходящейПочты` BOOLEAN, `Пользователь` CHAR, `ПользовательSMTP` CHAR, `Пароль` CHAR, `ПарольSMTP` CHAR, `ВремяОжидания` INT, `ОставлятьКопииСообщенийНаСервере` BOOLEAN, `ПротоколВходящейПочты` CHAR, `ПериодХраненияСообщенийНаСервере` INT, `ИспользоватьДляОтправки` BOOLEAN, `ИспользоватьДляПолучения` BOOLEAN, `УдалитьВПредставлениеВключатьИмяПользователя` BOOLEAN, `ТребуетсяВходНаСерверПередОтправкой` BOOLEAN, `УдалитьОтветственныйЗаОбработкуПисем` CHAR, `СпособPOP3Аутентификации` CHAR, `СпособSMTPАутентификации` CHAR, `SMTPАутентификация` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыЦенПоставщиков` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Валюта` CHAR, `ЦенаВключаетНДС` BOOLEAN, `ДоступноДляЗакупки` BOOLEAN, `ДоступноДляПродажиКлиентам` BOOLEAN, `РеквизитДопУпорядочивания` INT, `owner` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_УсловияПредоставленияСкидокНаценок` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УсловиеПредоставления` CHAR, `ВариантОпределенияПериодаНакопительнойСкидки` CHAR, `ВариантНакопления` CHAR, `КритерийОграниченияПримененияЗаОбъемПродаж` CHAR, `ОбластьОграничения` CHAR, `ВалютаОграничения` CHAR, `ГрафикОплаты` CHAR, `ФормаОплаты` CHAR, `ЗначениеУсловияОграничения` FLOAT, `СегментНоменклатурыОграничения` CHAR, `ПериодНакопления` CHAR, `ТипСравнения` CHAR, `ГруппаПользователей` CHAR, `ВидКартыЛояльности` CHAR, `СегментПартнеров` CHAR, `КоличествоПериодовНакопления` INT, `parent` CHAR, `ts_ВремяДействия` JSON);
CREATE TABLE IF NOT EXISTS `cat_ТранспортныеСредства` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидПеревозки` CHAR, `ГосударственныйНомерПрицепа` CHAR, `ЛицензионнаяКарточкаВид` CHAR, `ЛицензионнаяКарточкаНомер` CHAR, `ЛицензионнаяКарточкаРегистрационныйНомер` CHAR, `ЛицензионнаяКарточкаСерия` CHAR, `Марка` CHAR, `Прицеп` CHAR, `type` CHAR, `ГрузоподъемностьВТоннах` FLOAT, `ВместимостьВКубическихМетрах` FLOAT, `УдалитьИспользоватьВДоставке` BOOLEAN, `ВместимостьПредставление` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтраныМира` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `КодАльфа2` CHAR, `КодАльфа3` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СтатьиДвиженияДенежныхСредств` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ХозяйственнаяОперация` CHAR, `КорреспондирующийСчет` CHAR, `Описание` CHAR, `ВидДвиженияДенежныхСредств` CHAR, `РеквизитДопУпорядочивания` INT, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Склады` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УдалитьВариантКонтроля` CHAR, `ВыборГруппы` CHAR, `УдалитьГраницаГрафикаДоступности` Date, `ИспользоватьАдресноеХранение` BOOLEAN, `ИспользоватьАдресноеХранениеСправочно` BOOLEAN, `ИспользоватьОрдернуюСхемуПриОтгрузке` BOOLEAN, `ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач` BOOLEAN, `ИспользоватьОрдернуюСхемуПриПоступлении` BOOLEAN, `ИспользоватьСерииНоменклатуры` BOOLEAN, `ИспользоватьСкладскиеПомещения` BOOLEAN, `calendar` CHAR, `КонтролироватьОперативныеОстатки` BOOLEAN, `НастройкаАдресногоХранения` CHAR, `Подразделение` CHAR, `РозничныйВидЦены` CHAR, `УдалитьСрокПоставки` INT, `ТекущаяДолжностьОтветственного` CHAR, `ТекущийОтветственный` CHAR, `ТипСклада` CHAR, `УровеньОбслуживания` CHAR, `УчетныйВидЦены` CHAR, `НачинатьОтгрузкуПослеФормированияЗаданияНаПеревозку` BOOLEAN, `ИспользованиеРабочихУчастков` CHAR, `УдалитьФорматМагазина` CHAR, `УдалитьКонтролироватьАссортимент` BOOLEAN, `ИсточникИнформацииОЦенахДляПечати` CHAR, `ИспользоватьСтатусыРасходныхОрдеров` BOOLEAN, `ИспользоватьСтатусыПриходныхОрдеров` BOOLEAN, `СпособОбеспеченияПотребностей` CHAR, `РегламентноеЗаданиеСозданиеРасходныхОрдеров` CHAR, `СоздаватьРасходныеОрдераРегламентнымЗаданием` BOOLEAN, `ДатаНачалаОрдернойСхемыПриОтгрузке` Date, `ДатаНачалаОрдернойСхемыПриПоступлении` Date, `ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач` Date, `ДатаНачалаИспользованияСкладскихПомещений` Date, `ДатаНачалаАдресногоХраненияОстатков` Date, `УчитыватьСебестоимостьПоСериям` BOOLEAN, `КонтролироватьОбеспечение` BOOLEAN, `parent` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_СкладскиеЯчейки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Линия` CHAR, `ОбластьХранения` CHAR, `Позиция` CHAR, `ПорядокОбхода` INT, `РабочийУчасток` CHAR, `Секция` CHAR, `Помещение` CHAR, `Стеллаж` CHAR, `Типоразмер` CHAR, `ТипСкладскойЯчейки` CHAR, `УровеньДоступности` INT, `Ярус` CHAR, `МаксимальныйКоэффициентНаполненностиПоВесу` INT, `МаксимальныйКоэффициентНаполненностиПоОбъему` INT, `ИспользованиеПериодичностиИнвентаризацииЯчейки` CHAR, `КоличествоДнейМеждуИнвентаризациями` INT, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СкладскиеПомещения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ИспользоватьАдресноеХранение` BOOLEAN, `ИспользоватьАдресноеХранениеСправочно` BOOLEAN, `НастройкаАдресногоХранения` CHAR, `ТекущийОтветственный` CHAR, `ТекущаяДолжностьОтветственного` CHAR, `ИспользованиеРабочихУчастков` CHAR, `ДатаНачалаАдресногоХраненияОстатков` Date, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СкладскиеГруппыУпаковок` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СкладскиеГруппыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `ТипНоменклатуры` CHAR, `ФизическиРазличаетсяОтНазначения` BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_СкидкиНаценки` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаПредоставления` CHAR, `ВариантСовместногоПрименения` CHAR, `ВидЦены` CHAR, `ЗначениеСкидкиНаценки` FLOAT, `РеквизитДопУпорядочивания` INT, `СпособПредоставления` CHAR, `УдалитьСтатус` CHAR, `Управляемая` BOOLEAN, `ТекстСообщения` CHAR, `ВидКартыЛояльности` CHAR, `СегментПодарков` CHAR, `ИспользоватьКратность` BOOLEAN, `УсловиеДляСкидкиКоличеством` FLOAT, `ТочностьОкругления` FLOAT, `ПсихологическоеОкругление` FLOAT, `ОкруглятьВБольшуюСторону` BOOLEAN, `СпособПримененияСкидки` CHAR, `БонуснаяПрограммаЛояльности` CHAR, `ПериодДействия` CHAR, `КоличествоПериодовДействия` INT, `ПериодОтсрочкиНачалаДействия` CHAR, `КоличествоПериодовОтсрочкиНачалаДействия` INT, `parent` CHAR, `ts_УсловияПредоставления` JSON, `ts_ЦеновыеГруппы` JSON);
CREATE TABLE IF NOT EXISTS `cat_СерииНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ГоденДо` Date, `ВидНоменклатуры` CHAR, `number_doc` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_СегментыПартнеров` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаОчистки` Date, `ДатаСоздания` Date, `Описание` CHAR, `Ответственный` CHAR, `СпособФормирования` CHAR, `СхемаКомпоновкиДанных` CHAR, `ПроверятьНаВхождениеПриСозданииНового` BOOLEAN, `РегламентноеЗадание` CHAR, `ХранилищеНастроекКомпоновкиДанных` CHAR, `ИмяШаблонаСКД` CHAR, `ЗапретОтгрузки` BOOLEAN, `parent` CHAR, `ts_ПартнерыПоСегменту` JSON);
CREATE TABLE IF NOT EXISTS `cat_СегментыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаОчистки` Date, `ДатаСоздания` Date, `Описание` CHAR, `Ответственный` CHAR, `СпособФормирования` CHAR, `СхемаКомпоновкиДанных` CHAR, `РегламентноеЗадание` CHAR, `ХранилищеНастроекКомпоновкиДанных` CHAR, `ИмяШаблонаСКД` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СделкиСКлиентами` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаПервичногоСпроса` CHAR, `ВероятностьУспешногоЗавершения` INT, `ВидСделки` CHAR, `ДатаНачала` Date, `ДатаОкончания` Date, `Закрыта` BOOLEAN, `Комментарий` CHAR, `Ответственный` CHAR, `Партнер` CHAR, `ПереведенаНаУправлениеВРучную` BOOLEAN, `ПотенциальнаяСуммаПродажи` FLOAT, `ПричинаПроигрышаСделки` CHAR, `Статус` CHAR, `СоглашениеСКлиентом` CHAR, `ОбособленныйУчетТоваровПоСделке` BOOLEAN, `ts_extra_fields` JSON, `ts_ПартнерыИКонтактныеЛица` JSON, `ts_ПервичныйСпрос` JSON, `ts_НаборыЗначенийДоступа` JSON);
CREATE TABLE IF NOT EXISTS `cat_РабочиеМеста` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ИмяКомпьютера` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ПроизводственныеКалендари` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_Производители` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Проекты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Ответственный` CHAR, `ПлановаяДатаНачала` Date, `ДатаНачала` Date, `ПлановаяДатаОкончания` Date, `ДатаОкончания` Date, `Завершен` BOOLEAN, `Комментарий` CHAR, `ts_ПартнерыИКонтактныеЛица` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_Пользователи` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Недействителен` BOOLEAN, `Комментарий` CHAR, `ancillary` BOOLEAN, `ТекущееПодразделение` CHAR, `Подготовлен` BOOLEAN, `ИдентификаторПользователяИБ` CHAR, `ИдентификаторПользователяСервиса` CHAR, `СвойстваПользователяИБ` CHAR, `ФизическоеЛицо` CHAR, `ts_extra_fields` JSON, `ts_КонтактнаяИнформация` JSON);
CREATE TABLE IF NOT EXISTS `cat_ПартнерыПрисоединенныеФайлы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автор` CHAR, `ВладелецФайла` CHAR, `ДатаМодификацииУниверсальная` Date, `ДатаСоздания` Date, `Зашифрован` BOOLEAN, `Изменил` CHAR, `ИндексКартинки` INT, `Описание` CHAR, `ПодписанЭП` BOOLEAN, `ПутьКФайлу` CHAR, `Размер` INT, `Расширение` CHAR, `Редактирует` CHAR, `СтатусИзвлеченияТекста` CHAR, `ТекстХранилище` CHAR, `ТипХраненияФайла` CHAR, `Том` CHAR, `ФайлХранилище` CHAR, `ts_ЭлектронныеПодписи` JSON, `ts_СертификатыШифрования` JSON);
CREATE TABLE IF NOT EXISTS `cat_Партнеры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `БизнесРегион` CHAR, `ГруппаДоступа` CHAR, `ДатаРегистрации` Date, `Клиент` BOOLEAN, `Комментарий` CHAR, `Поставщик` BOOLEAN, `НаименованиеПолное` CHAR, `ОсновнойМенеджер` CHAR, `Конкурент` BOOLEAN, `ПрочиеОтношения` BOOLEAN, `ОбслуживаетсяТорговымиПредставителями` BOOLEAN, `ДополнительнаяИнформация` CHAR, `Перевозчик` BOOLEAN, `ШаблонЭтикетки` CHAR, `ЮрФизЛицо` CHAR, `Пол` CHAR, `ДатаРождения` Date, `parent` CHAR, `ts_extra_fields` JSON, `ts_КонтактнаяИнформация` JSON);
CREATE TABLE IF NOT EXISTS `cat_Организации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидОбменаСКонтролирующимиОрганами` CHAR, `Военкомат` CHAR, `ГоловнаяОрганизация` CHAR, `ГрафикРаботы` CHAR, `ИНН` CHAR, `ДополнительныйКодФСС` CHAR, `ЕстьОбособленныеПодразделения` BOOLEAN, `УдалитьДопускаютсяВзаиморасчетыСКлиентамиЧерезГоловнуюОрганизацию` BOOLEAN, `УдалитьДопускаютсяВзаиморасчетыСПоставщикамиЧерезГоловнуюОрганизацию` BOOLEAN, `ИндивидуальныйПредприниматель` CHAR, `КодНалоговогоОргана` CHAR, `ДатаРегистрации` Date, `ИностраннаяОрганизация` BOOLEAN, `ИПКодПодчиненностиФСС` CHAR, `ИПРегистрационныйНомерПФР` CHAR, `ИПРегистрационныйНомерТФОМС` CHAR, `ИПРегистрационныйНомерФСС` CHAR, `КодВСтранеРегистрации` CHAR, `КодНалоговогоОрганаПолучателя` CHAR, `КодОрганаПФР` CHAR, `КодОрганаФСГС` CHAR, `КодОКОНХ` CHAR, `КодПоОКАТО` CHAR, `КодПоОКПО` CHAR, `КодПодчиненностиФСС` CHAR, `КПП` CHAR, `КрупнейшийНалогоплательщик` BOOLEAN, `НаименованиеПолное` CHAR, `НаименованиеТерриториальногоОрганаПФР` CHAR, `НаименованиеТерриториальногоОрганаФСС` CHAR, `НаименованиеИнострОрганизации` CHAR, `НаименованиеНалоговогоОргана` CHAR, `НаименованиеСокращенное` CHAR, `ОбменКаталогОтправкиДанныхОтчетности` CHAR, `ОбменКаталогПрограммыЭлектроннойПочты` CHAR, `ОбменКодАбонента` CHAR, `ОбособленноеПодразделение` BOOLEAN, `ОГРН` CHAR, `ПрименятьРайонныйКоэффициент` BOOLEAN, `ПрименятьСевернуюНадбавку` BOOLEAN, `РайонныйКоэффициент` FLOAT, `prefix` CHAR, `РегистрационныйНомерФСС` CHAR, `РегистрацияВНалоговомОргане` CHAR, `УдалитьТерриториальныеУсловияПФР` CHAR, `РегистрационныйНомерПФР` CHAR, `СвидетельствоДатаВыдачи` Date, `СвидетельствоСерияНомер` CHAR, `УчетнаяЗаписьОбмена` CHAR, `КодОКВЭД` CHAR, `НаименованиеОКВЭД` CHAR, `РегистрационныйНомерТФОМС` CHAR, `КодОКОПФ` CHAR, `НаименованиеОКОПФ` CHAR, `КодОКФС` CHAR, `РайонныйКоэффициентРФ` FLOAT, `СтранаПостоянногоМестонахождения` CHAR, `СтранаРегистрации` CHAR, `УдалитьТекущаяДолжностьРуководителя` CHAR, `УдалитьТекущийГлавныйБухгалтер` CHAR, `УдалитьТекущийРуководитель` CHAR, `ГрафикРаботыСотрудников` CHAR, `НаименованиеОКФС` CHAR, `ЦифровойИндексОбособленногоПодразделения` INT, `ПроцентСевернойНадбавки` FLOAT, `ЮрФизЛицо` CHAR, `ЮридическоеФизическоеЛицо` CHAR, `ФайлЛоготип` CHAR, `ФайлФаксимильнаяПечать` CHAR, `ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию` BOOLEAN, `ЗарегистрированВОЭЗ` BOOLEAN, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ОбластиХранения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `Помещение` CHAR, `ПриоритетРазмещенияВСвободныеЯчейки` INT, `ПриоритетРазмещенияВМонотоварныеЯчейки` INT, `ПриоритетРазмещенияВСмешанныеЯчейки` INT, `ПриоритетРазмещенияВЯчейкиСДругимТоваром` INT, `ПриоритетОтбораИзМонотоварныхЯчеек` INT, `ПриоритетОтбораИзСмешанныхЯчеек` INT, `ПриоритетОтбораПодОстаток` INT, `ОписаниеМонотоварности` CHAR, `СтрогаяМонотоварность` BOOLEAN, `ИспользованиеПериодичностиИнвентаризацииЯчеек` CHAR, `КоличествоДнейМеждуИнвентаризациями` INT, `ОбластьОбособленногоХранения` BOOLEAN, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_НоменклатураПрисоединенныеФайлы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автор` CHAR, `ВладелецФайла` CHAR, `ДатаМодификацииУниверсальная` Date, `ДатаСоздания` Date, `Зашифрован` BOOLEAN, `Изменил` CHAR, `ИндексКартинки` INT, `Описание` CHAR, `ПодписанЭП` BOOLEAN, `ПутьКФайлу` CHAR, `Размер` INT, `Расширение` CHAR, `Редактирует` CHAR, `СтатусИзвлеченияТекста` CHAR, `ТекстХранилище` CHAR, `ТипХраненияФайла` CHAR, `Том` CHAR, `ФайлХранилище` CHAR, `ts_ЭлектронныеПодписи` JSON, `ts_СертификатыШифрования` JSON);
CREATE TABLE IF NOT EXISTS `cat_Номенклатура` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `Артикул` CHAR, `ВариантОформленияПродажи` CHAR, `Вес` FLOAT, `ВестиУчетПоГТД` BOOLEAN, `ВестиУчетСертификатовНоменклатуры` BOOLEAN, `ВидАлкогольнойПродукции` CHAR, `ВидНоменклатуры` CHAR, `ГруппаДоступа` CHAR, `АлкогольнаяПродукция` BOOLEAN, `ЕдиницаИзмерения` CHAR, `ЕдиницаИзмеренияСрокаГодности` CHAR, `ЕстьТоварыДругогоКачества` BOOLEAN, `ИмпортнаяАлкогольнаяПродукция` BOOLEAN, `ИспользованиеХарактеристик` CHAR, `ИспользоватьИндивидуальныйШаблонЦенника` BOOLEAN, `ИспользоватьИндивидуальныйШаблонЭтикетки` BOOLEAN, `ИспользоватьУпаковки` BOOLEAN, `Качество` CHAR, `КодДляПоиска` CHAR, `Марка` CHAR, `НаборУпаковок` CHAR, `СтавкаНДС` CHAR, `НоменклатураМногооборотнаяТара` CHAR, `Объем` FLOAT, `ОбъемДАЛ` FLOAT, `Описание` CHAR, `ПодакцизныйТовар` BOOLEAN, `ПоставляетсяВМногооборотнойТаре` BOOLEAN, `Производитель` CHAR, `ПроизводительИмпортерДляДекларацийАлко` CHAR, `СкладскаяГруппа` CHAR, `СрокГодности` INT, `ГруппаФинансовогоУчета` CHAR, `ТипНоменклатуры` CHAR, `ТоварнаяКатегория` CHAR, `ФайлКартинки` CHAR, `ФайлОписанияДляСайта` CHAR, `ХарактеристикаМногооборотнаяТара` CHAR, `ЦеноваяГруппа` CHAR, `ШаблонЦенника` CHAR, `ЕдиницаДляОтчетов` CHAR, `КоэффициентЕдиницыДляОтчетов` FLOAT, `ШаблонЭтикетки` CHAR, `СезоннаяГруппа` CHAR, `КоллекцияНоменклатуры` CHAR, `Принципал` CHAR, `Контрагент` CHAR, `РейтингПродаж` CHAR, `ОбособленнаяЗакупкаПродажа` BOOLEAN, `ГруппаАналитическогоУчета` CHAR, `КодТНВЭД` CHAR, `КодОКВЭД` CHAR, `КодОКП` CHAR, `ОблагаетсяНДПИПоПроцентнойСтавке` BOOLEAN, `parent` CHAR, `Цена` FLOAT, `ts_extra_fields` JSON, `ts_ДрагоценныеМатериалы` JSON);
CREATE TABLE IF NOT EXISTS `cat_НаправленияДеятельности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_НаборыУпаковок` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ЕдиницаИзмерения` CHAR, `ЕдиницаДляОтчетов` CHAR, `КоэффициентЕдиницыДляОтчетов` FLOAT);
CREATE TABLE IF NOT EXISTS `cat_НаборыДополнительныхРеквизитовИСведений` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КоличествоРеквизитов` CHAR, `КоличествоСведений` CHAR, `parent` CHAR, `ts_extra_fields` JSON, `ts_extra_properties` JSON);
CREATE TABLE IF NOT EXISTS `cat_Контрагенты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `ОбособленноеПодразделение` BOOLEAN, `ЮридическоеФизическоеЛицо` CHAR, `ГоловнойКонтрагент` CHAR, `ИНН` CHAR, `КПП` CHAR, `КодПоОКПО` CHAR, `УдалитьФизЛицо` CHAR, `ДополнительнаяИнформация` CHAR, `Партнер` CHAR, `ЮрФизЛицо` CHAR, `НДСпоСтавкам4и2` BOOLEAN, `СтранаРегистрации` CHAR, `РегистрационныйНомер` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_КонтактныеЛицаПартнеров` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Удалить_ФизЛицо` CHAR, `ДатаРегистрацииСвязи` Date, `ДатаПрекращенияСвязи` Date, `Автор` CHAR, `Комментарий` CHAR, `ДополнительнаяИнформация` CHAR, `ДолжностьПоВизитке` CHAR, `Пол` CHAR, `ДатаРождения` Date, `owner` CHAR, `ts_КонтактнаяИнформация` JSON, `ts_РолиКонтактногоЛица` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_КоммерческоеПредложениеКлиентуПрисоединенныеФайлы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Автор` CHAR, `ВладелецФайла` CHAR, `ДатаМодификацииУниверсальная` Date, `ДатаСоздания` Date, `Зашифрован` BOOLEAN, `Изменил` CHAR, `ИндексКартинки` INT, `Описание` CHAR, `ПодписанЭП` BOOLEAN, `ПутьКФайлу` CHAR, `Размер` INT, `Расширение` CHAR, `Редактирует` CHAR, `СтатусИзвлеченияТекста` CHAR, `ТекстХранилище` CHAR, `ТипХраненияФайла` CHAR, `Том` CHAR, `ФайлХранилище` CHAR, `ts_ЭлектронныеПодписи` JSON, `ts_СертификатыШифрования` JSON);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторБанковРФ` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КоррСчет` CHAR, `Город` CHAR, `Адрес` CHAR, `Телефоны` CHAR, `ДеятельностьПрекращена` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_Кассы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КассоваяКнига` CHAR, `ВалютаДенежныхСредств` CHAR, `Подразделение` CHAR, `РазрешитьПлатежиБезУказанияЗаявок` BOOLEAN, `СрокИнкассации` INT, `ГруппаФинансовогоУчета` CHAR, `ЭтоКассаОбособленногоПодразделения` BOOLEAN, `СчетУчета` CHAR, `owner` CHAR, `ts_ПолучателиПлатежейПриПеремещенииДС` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_property_values` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Вес` FLOAT, `owner` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ЕдиницыИзмерения` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR, `МеждународноеСокращение` CHAR, `ТипЕдиницыИзмерения` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ДоговорыКонтрагентов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `БанковскийСчет` CHAR, `БанковскийСчетКонтрагента` CHAR, `ВалютаВзаиморасчетов` CHAR, `Комментарий` CHAR, `ДатаНачалаДействия` Date, `ДатаОкончанияДействия` Date, `Организация` CHAR, `Контрагент` CHAR, `Менеджер` CHAR, `НаименованиеДляПечати` CHAR, `УчетАгентскогоНДС` BOOLEAN, `ВидАгентскогоДоговора` CHAR, `date` Date, `number_doc` CHAR, `Партнер` CHAR, `Подразделение` CHAR, `ПорядокОплаты` CHAR, `ПорядокРасчетов` CHAR, `Согласован` BOOLEAN, `Статус` CHAR, `ХозяйственнаяОперация` CHAR, `ТипДоговора` CHAR, `ОграничиватьСуммуЗадолженности` BOOLEAN, `ДопустимаяСуммаЗадолженности` FLOAT, `ГруппаФинансовогоУчета` CHAR, `ЗапрещаетсяПросроченнаяЗадолженность` BOOLEAN, `КонтактноеЛицо` CHAR, `СтатьяДвиженияДенежныхСредств` CHAR, `ИдентификаторПлатежа` CHAR, `УстановленСрокОплаты` BOOLEAN, `СрокОплаты` INT, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ГруппыФинансовогоУчетаНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `СчетУчетаПередачиНаКомиссию` CHAR, `СчетУчетаВыручкиОтПродаж` CHAR, `СчетУчетаСебестоимостиПродаж` CHAR, `СчетУчетаНДСПриПродаже` CHAR, `СчетУчетаНаСкладе` CHAR, `СчетУчетаВПути` CHAR, `СчетУчетаНДСВПути` CHAR, `СчетУчетаНДСПриЗакупке` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ГруппыДоступаНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ГрафикиОплаты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УдалитьКалендарь` CHAR, `ФормаОплаты` CHAR, `ТолькоКредитныеЭтапы` BOOLEAN, `calendar` CHAR, `ts_Этапы` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВнешниеПользователи` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Недействителен` BOOLEAN, `ОбъектАвторизации` CHAR, `УстановитьРолиНепосредственно` BOOLEAN, `Комментарий` CHAR, `Подготовлен` BOOLEAN, `ИдентификаторПользователяИБ` CHAR, `ИдентификаторПользователяСервиса` CHAR, `СвойстваПользователяИБ` CHAR, `УдалитьПароль` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыЦен` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаЦены` CHAR, `ЦенаВключаетНДС` BOOLEAN, `ИспользоватьПриПродаже` BOOLEAN, `ИспользоватьПриПередачеМеждуОрганизациями` BOOLEAN, `ИспользоватьПриВыпускеПродукции` BOOLEAN, `СпособЗаданияЦены` CHAR, `Формула` CHAR, `ОкруглятьВБольшуюСторону` BOOLEAN, `РеквизитДопУпорядочивания` INT, `identifier` CHAR, `ПорогСрабатывания` FLOAT, `СхемаКомпоновкиДанных` CHAR, `ХранилищеСхемыКомпоновкиДанных` CHAR, `ХранилищеНастроекКомпоновкиДанных` CHAR, `БазовыйВидЦены` CHAR, `Наценка` FLOAT, `ТочностьОкругления` FLOAT, `Округлять` BOOLEAN, `УстанавливатьЦенуПриВводеНаОсновании` BOOLEAN, `ИспользоватьПриПередачеПродукцииДавальцу` BOOLEAN, `ts_ВлияющиеВидыЦен` JSON, `ts_ЦеновыеГруппы` JSON, `ts_ПравилаОкругленияЦены` JSON, `ts_ПорогиСрабатывания` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыСделокСКлиентами` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `Ответственный` CHAR, `ТипСделки` CHAR, `ИспользованиеРазрешено` BOOLEAN, `ИспользоватьСпрос` BOOLEAN, `ОбособленныйУчетТоваровПоСделке` BOOLEAN, `ts_ЭтапыСделкиПоПродаже` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыСвязейМеждуФизЛицами` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Комментарий` CHAR, `РольФизЛица1` CHAR, `РольФизЛица2` CHAR, `ОбратноеНаименование` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыСвязейМеждуПартнерами` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Комментарий` CHAR, `РольПартнера1` CHAR, `РольПартнера2` CHAR, `ОбратноеНаименование` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `АлкогольнаяПродукция` BOOLEAN, `ВариантОказанияУслуг` CHAR, `ВариантОформленияПродажи` CHAR, `ВариантПредставленияНабораВПечатныхФормах` CHAR, `ВариантРасчетаЦеныНабора` CHAR, `ВестиУчетПоГТД` BOOLEAN, `ВестиУчетСертификатовНоменклатуры` BOOLEAN, `ВидАлкогольнойПродукции` CHAR, `ГруппаДоступа` CHAR, `ГруппаФинансовогоУчета` CHAR, `ЕдиницаДляОтчетов` CHAR, `ЕдиницаИзмерения` CHAR, `ЗапретРедактированияНаименованияНоменклатурыДляПечати` BOOLEAN, `ЗапретРедактированияНаименованияХарактеристикиДляПечати` BOOLEAN, `ЗапретРедактированияРабочегоНаименованияНоменклатуры` BOOLEAN, `ЗапретРедактированияРабочегоНаименованияХарактеристики` BOOLEAN, `ИмпортнаяАлкогольнаяПродукция` BOOLEAN, `ИспользованиеХарактеристик` CHAR, `ИспользоватьИндивидуальноеНаименованиеПриПечати` BOOLEAN, `ИспользоватьКоличествоСерии` BOOLEAN, `ИспользоватьНомерСерии` BOOLEAN, `ИспользоватьСерии` BOOLEAN, `ИспользоватьСрокГодностиСерии` BOOLEAN, `ИспользоватьУпаковки` BOOLEAN, `ИспользоватьХарактеристики` BOOLEAN, `КонтролироватьДублиНоменклатуры` BOOLEAN, `КонтролироватьДублиХарактеристик` BOOLEAN, `КоэффициентЕдиницыДляОтчетов` FLOAT, `НаборСвойств` CHAR, `НаборСвойствСерий` CHAR, `НаборСвойствХарактеристик` CHAR, `НаборУпаковок` CHAR, `НаименованиеДляПечати` CHAR, `НастройкаИспользованияСерий` CHAR, `НоменклатураМногооборотнаяТара` CHAR, `ОбособленнаяЗакупкаПродажа` BOOLEAN, `Описание` CHAR, `ПодакцизныйТовар` BOOLEAN, `ПоставляетсяВМногооборотнойТаре` BOOLEAN, `СезоннаяГруппа` CHAR, `СкладскаяГруппа` CHAR, `СодержитДрагоценныеМатериалы` BOOLEAN, `ТипНоменклатуры` CHAR, `ТочностьУказанияСрокаГодностиСерии` CHAR, `ХарактеристикаМногооборотнаяТара` CHAR, `ШаблонНаименованияДляПечатиНоменклатуры` CHAR, `ШаблонНаименованияДляПечатиХарактеристики` CHAR, `ШаблонРабочегоНаименованияНоменклатуры` CHAR, `ШаблонРабочегоНаименованияХарактеристики` CHAR, `ШаблонРабочегоНаименованияСерии` CHAR, `ШаблонЦенника` CHAR, `ШаблонЭтикетки` CHAR, `ШаблонЭтикеткиСерии` CHAR, `ГруппаАналитическогоУчета` CHAR, `КодОКВЭД` CHAR, `КодТНВЭД` CHAR, `parent` CHAR, `ts_РеквизитыДляКонтроляНоменклатуры` JSON, `ts_РеквизитыДляКонтроляХарактеристик` JSON, `ts_РеквизитыДляКонтроляСерий` JSON, `ts_РеквизитыБыстрогоОтбораНоменклатуры` JSON, `ts_РеквизитыБыстрогоОтбораХарактеристик` JSON, `ts_ПолитикиУчетаСерий` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыКонтактнойИнформации` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `АдресТолькоРоссийский` BOOLEAN, `ВключатьСтрануВПредставление` BOOLEAN, `ЗапрещатьВводНекорректного` BOOLEAN, `МожноИзменятьСпособРедактирования` BOOLEAN, `ОбязательноеЗаполнение` BOOLEAN, `tooltip` CHAR, `ПроверятьКорректность` BOOLEAN, `ПроверятьПоФИАС` BOOLEAN, `РазрешитьВводНесколькихЗначений` BOOLEAN, `РедактированиеТолькоВДиалоге` BOOLEAN, `РеквизитДопУпорядочивания` INT, `СкрыватьНеактуальныеАдреса` BOOLEAN, `type` CHAR, `ЗапретитьРедактированиеПользователем` BOOLEAN, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыКартЛояльности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Статус` CHAR, `ДатаНачалаДействия` Date, `ДатаОкончанияДействия` Date, `Комментарий` CHAR, `Персонализирована` BOOLEAN, `АвтоматическаяРегистрацияПриПервомСчитывании` BOOLEAN, `ТипКарты` CHAR, `Организация` CHAR, `БонуснаяПрограммаЛояльности` CHAR, `ts_УдалитьСкидкиНаценки` JSON, `ts_extra_fields` JSON, `ts_ШаблоныКодовКартЛояльности` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыЗапасов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Организация` CHAR, `ТипЗапасов` CHAR, `НалогообложениеНДС` CHAR, `Комитент` CHAR, `Соглашение` CHAR, `Валюта` CHAR, `РеализацияЗапасовДругойОрганизации` BOOLEAN, `ВидЗапасовВладельца` CHAR, `СпособПередачиТоваров` CHAR, `Поставщик` CHAR, `Предназначение` CHAR, `Подразделение` CHAR, `Менеджер` CHAR, `Сделка` CHAR, `УдалитьДеятельностьОблагаетсяЕНВД` BOOLEAN, `ГруппаФинансовогоУчета` CHAR, `Контрагент` CHAR, `Договор` CHAR, `Назначение` CHAR, `ГруппаПродукции` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ВидыДокументовФизическихЛиц` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КодМВД` CHAR, `КодПФР` CHAR, `РеквизитДопУпорядочивания` INT);
CREATE TABLE IF NOT EXISTS `cat_ВариантыКомплектацииНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Характеристика` CHAR, `Основной` BOOLEAN, `НоменклатураОсновногоКомпонента` CHAR, `ХарактеристикаОсновногоКомпонента` CHAR, `Упаковка` CHAR, `КоличествоУпаковок` FLOAT, `Количество` FLOAT, `ДлительностьСборкиРазборки` INT, `ВариантРасчетаЦеныНабора` CHAR, `ВариантПредставленияНабораВПечатныхФормах` CHAR, `СодержитТовары` BOOLEAN, `СодержитУслуги` BOOLEAN, `owner` CHAR, `ts_Товары` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВариантыКлассификацииЗадолженности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УдалитьКалендарь` CHAR, `calendar` CHAR, `ts_Интервалы` JSON);
CREATE TABLE IF NOT EXISTS `cat_Валюты` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ЗагружаетсяИзИнтернета` BOOLEAN, `НаименованиеПолное` CHAR, `Наценка` FLOAT, `ОсновнаяВалюта` CHAR, `ПараметрыПрописиНаРусском` CHAR, `ФормулаРасчетаКурса` CHAR, `СпособУстановкиКурса` CHAR);
CREATE TABLE IF NOT EXISTS `cat_БизнесРегионы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ОсновнойМенеджер` CHAR, `ЗначениеГеографическогоРегиона` CHAR, `ГеографическийРегион` CHAR, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_БанковскиеСчетаОрганизаций` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВалютаДенежныхСредств` CHAR, `НомерСчета` CHAR, `Банк` CHAR, `БанкДляРасчетов` CHAR, `ТекстКорреспондента` CHAR, `ТекстНазначения` CHAR, `ВариантВыводаМесяца` CHAR, `ВыводитьСуммуБезКопеек` BOOLEAN, `СрокИсполненияПлатежа` INT, `ИспользоватьОбменСБанком` BOOLEAN, `Программа` CHAR, `Кодировка` CHAR, `ФайлЗагрузки` CHAR, `ФайлВыгрузки` CHAR, `РазрешитьПлатежиБезУказанияЗаявок` BOOLEAN, `Подразделение` CHAR, `БИКБанка` CHAR, `РучноеИзменениеРеквизитовБанка` BOOLEAN, `НаименованиеБанка` CHAR, `КоррСчетБанка` CHAR, `ГородБанка` CHAR, `АдресБанка` CHAR, `ТелефоныБанка` CHAR, `БИКБанкаДляРасчетов` CHAR, `РучноеИзменениеРеквизитовБанкаДляРасчетов` BOOLEAN, `НаименованиеБанкаДляРасчетов` CHAR, `КоррСчетБанкаДляРасчетов` CHAR, `ГородБанкаДляРасчетов` CHAR, `АдресБанкаДляРасчетов` CHAR, `ТелефоныБанкаДляРасчетов` CHAR, `ГруппаФинансовогоУчета` CHAR, `ИспользоватьПрямойОбменСБанком` BOOLEAN, `СчетУчета` CHAR, `ОтдельныйСчетГОЗ` BOOLEAN, `ГосударственныйКонтракт` CHAR, `owner` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_БанковскиеСчетаКонтрагентов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НомерСчета` CHAR, `Банк` CHAR, `БанкДляРасчетов` CHAR, `ТекстКорреспондента` CHAR, `ТекстНазначения` CHAR, `ВалютаДенежныхСредств` CHAR, `БИКБанка` CHAR, `РучноеИзменениеРеквизитовБанка` BOOLEAN, `НаименованиеБанка` CHAR, `КоррСчетБанка` CHAR, `ГородБанка` CHAR, `АдресБанка` CHAR, `ТелефоныБанка` CHAR, `БИКБанкаДляРасчетов` CHAR, `РучноеИзменениеРеквизитовБанкаДляРасчетов` BOOLEAN, `НаименованиеБанкаДляРасчетов` CHAR, `КоррСчетБанкаДляРасчетов` CHAR, `ГородБанкаДляРасчетов` CHAR, `АдресБанкаДляРасчетов` CHAR, `ТелефоныБанкаДляРасчетов` CHAR, `owner` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ГруппыАналитическогоУчетаНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Описание` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_ОбщероссийскийКлассификаторПродукции` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторТНВЭД` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КлассификаторВидовЭкономическойДеятельности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `НаименованиеПолное` CHAR);
CREATE TABLE IF NOT EXISTS `cat_КоллекцииНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ДатаНачалаПродаж` Date, `ДатаЗапретаПродажи` Date, `ДатаНачалаЗакупок` Date, `ДатаЗапретаЗакупки` Date, `parent` CHAR, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыОповещенийКлиентам` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ГруппаРассылокИОповещений` CHAR, `ПредназначенаДляЭлектронныхПисем` BOOLEAN, `ПредназначенаДляSMS` BOOLEAN, `ШаблонСообщенияSMS` CHAR, `ШаблонЭлектронногоПисьма` CHAR, `ИспользуетсяУсловиеОтправки` BOOLEAN, `УсловиеОтправки` CHAR, `РегламентноеЗадание` CHAR, `ТипСобытия` CHAR, `Комментарий` CHAR, `ts_ПараметрыУсловия` JSON);
CREATE TABLE IF NOT EXISTS `cat_РейтингиПродажНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `РеквизитДопУпорядочивания` INT, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_СертификатыНоменклатуры` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `УдалитьСтатус` CHAR, `ДатаНачалаСрокаДействия` Date, `ДатаОкончанияСрокаДействия` Date, `Бессрочный` BOOLEAN, `ОрганВыдавшийДокумент` CHAR, `ТипСертификата` CHAR, `number_doc` CHAR, `presentation` CHAR, `Статус` CHAR, `parent` CHAR);
CREATE TABLE IF NOT EXISTS `cat_СезонныеГруппы` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN);
CREATE TABLE IF NOT EXISTS `cat_ВидыПодарочныхСертификатов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `Номинал` FLOAT, `Валюта` CHAR, `Комментарий` CHAR, `СегментНоменклатуры` CHAR, `ТипКарты` CHAR, `ПериодДействия` CHAR, `КоличествоПериодовДействия` INT, `ЧастичнаяОплата` BOOLEAN, `ГруппаФинансовогоУчета` CHAR, `ts_extra_fields` JSON, `ts_ШаблоныКодовПодарочныхСертификатов` JSON);
CREATE TABLE IF NOT EXISTS `cat_БонусныеПрограммыЛояльности` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `КурсКонвертацииБонусовВВалюту` FLOAT, `МаксимальныйПроцентОплатыБонусами` FLOAT, `ВалютаКонвертацииБонусов` CHAR, `НеНачислятьБаллыПриОплатеБонусами` BOOLEAN, `СегментНоменклатуры` CHAR, `Комментарий` CHAR, `ts_ЦеновыеГруппы` JSON, `ts_extra_fields` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыПланов` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ТипПлана` CHAR, `ЗаполнятьПартнера` BOOLEAN, `ЗаполнятьСоглашение` BOOLEAN, `ЗаполнятьСклад` BOOLEAN, `ЗаполнятьПодразделение` BOOLEAN, `ЗаполнятьПартнераВТЧ` BOOLEAN, `ЗаполнятьСоглашениеВТЧ` BOOLEAN, `ЗаполнятьСкладВТЧ` BOOLEAN, `ЗаполнятьМенеджера` BOOLEAN, `СтруктураНастроек` CHAR, `ЗапретитьРедактированиеПравила` BOOLEAN, `ЗаполнятьПланОплат` BOOLEAN, `ЗаполнятьПоФормуле` BOOLEAN, `ОтражаетсяВБюджетировании` BOOLEAN, `СтатьяБюджетов` CHAR, `Описание` CHAR, `ЗаполнятьФорматМагазина` BOOLEAN, `owner` CHAR, `ts_ПравилоЗаполнения` JSON);
CREATE TABLE IF NOT EXISTS `cat_ВидыАлкогольнойПродукции` (ref CHAR PRIMARY KEY NOT NULL, `deleted` BOOLEAN, lc_changed INT, id CHAR, name CHAR, is_folder BOOLEAN, `ВидЛицензии` CHAR);
